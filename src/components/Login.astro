---
import LoadingButton from './LoadingButton.astro';
import Logo from './Logo.astro';
---

<div id="login-container" class="auth-container">
    <div class="auth-card">
        <h2 class="auth-title">Bienvenido a <Logo/></h2>
        <p class="auth-subtitle">Inicia sesión.</p>
        
        <div id="google-signin-container">
            <button id="login-google" class="login-google">
                <img src="https://upload.wikimedia.org/wikipedia/commons/c/c1/Google_%22G%22_logo.svg" alt="Google logo" class="google-logo" />
                <span>Continuar con Google</span>
            </button>
        </div>

        <div class="separator">o si prefieres</div>

        <form id="login-form" class="auth-form">
            <div class="input-group">
                <label for="login-email">Email</label>
                <input type="email" id="login-email" name="email" required autocomplete="email">
            </div>
            <div class="input-group">
                <label for="login-password">Contraseña</label>
                <input type="password" id="login-password" name="password" required autocomplete="current-password">
            </div>

            <div id="login-error" class="error-message"></div>
            
            <LoadingButton id="login-submit-btn" text="Iniciar Sesión con Email" />
        </form>

        <div class="auth-switch">
            <p>¿No tienes una cuenta? <button id="show-register-btn" type="button" class="switch-link">Regístrate</button></p>
        </div>
    </div>
</div>


<script>
    import { setPersistence, browserLocalPersistence, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup } from "firebase/auth";
    import { auth } from "../firebase/config";

    document.addEventListener('DOMContentLoaded', () => {
        const loginContainer = document.getElementById('login-container');
        if (!loginContainer) return;

        const form = loginContainer.querySelector('#login-form');
        const googleButton = loginContainer.querySelector('#login-google');
        const errorContainer = loginContainer.querySelector('#login-error');
        const submitButton = loginContainer.querySelector('#login-submit-btn button');
        const spinner = submitButton?.querySelector('.spinner');
        const buttonText = submitButton?.querySelector('.button-text');

        if (!form || !googleButton || !errorContainer || !submitButton || !spinner || !buttonText) return;

        // Login con Email y Contraseña
        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            const email = form.elements.email.value;
            const password = form.elements.password.value;
            showLoading(true);

            try {
                await setPersistence(auth, browserLocalPersistence);
                await signInWithEmailAndPassword(auth, email, password);
                window.location.href = '/';
            } catch (error) {
                showError('El correo o la contraseña son incorrectos.');
                console.error('Error de inicio de sesión:', error.code);
            }
        });

        // Login con Google
        googleButton.addEventListener('click', async () => {
            showLoading(true);
            const provider = new GoogleAuthProvider();
            try {
                await setPersistence(auth, browserLocalPersistence);
                await signInWithPopup(auth, provider);
                window.location.href = '/';
            } catch (error) {
                showError('No se pudo iniciar sesión con Google.');
                console.error("Error durante el inicio de sesión con Google:", error);
            }
        });

        function showLoading(isLoading) {
            errorContainer.style.display = 'none';
            submitButton.disabled = isLoading;
            googleButton.disabled = isLoading;

            if (isLoading) {
                spinner.style.display = 'block';
                buttonText.style.display = 'none';
            } else {
                spinner.style.display = 'none';
                buttonText.style.display = 'block';
            }
        }

        function showError(message) {
            errorContainer.textContent = message;
            errorContainer.style.display = 'block';
            showLoading(false);
        }
    });
</script>
